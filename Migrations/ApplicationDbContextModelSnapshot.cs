// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using quasitekWeb.Data;

#nullable disable

namespace quasitekWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.7.23375.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("quasitekWeb.Models.Classes", b =>
                {
                    b.Property<long>("ClassesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ClassesId"));

                    b.Property<string>("ClassesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<int>("StudentAmount")
                        .HasColumnType("int");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("ClassesId");

                    b.HasIndex("CourseId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("quasitekWeb.Models.Course", b =>
                {
                    b.Property<long>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CourseId"));

                    b.Property<string>("CourseIntro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxScore")
                        .HasColumnType("int");

                    b.Property<int>("MaxTime")
                        .HasColumnType("int");

                    b.Property<int>("QuestionNum")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("quasitekWeb.Models.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<string>("DeviceModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpireDate")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseDate")
                        .HasColumnType("int");

                    b.HasKey("DeviceId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("quasitekWeb.Models.Mode", b =>
                {
                    b.Property<int>("ModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModeId"));

                    b.Property<string>("ModeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModeId");

                    b.ToTable("Mode");
                });

            modelBuilder.Entity("quasitekWeb.Models.PaperType", b =>
                {
                    b.Property<long>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TypeId"));

                    b.Property<string>("CorrectAnswers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CorrectNumber")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WrongAnswers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WrongNumber")
                        .HasColumnType("int");

                    b.HasKey("TypeId");

                    b.ToTable("PaperType");
                });

            modelBuilder.Entity("quasitekWeb.Models.RecordLog", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LogId"));

                    b.Property<long?>("AcedemicTypeId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<decimal?>("AcedemicTypeScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ClassesId")
                        .HasColumnType("bigint");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<int>("ModeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TechTypeId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TechTypeScore")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LogId");

                    b.HasIndex("AcedemicTypeId");

                    b.HasIndex("ClassesId");

                    b.HasIndex("CourseId");

                    b.HasIndex("ModeId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TechTypeId");

                    b.ToTable("RecordLog");
                });

            modelBuilder.Entity("quasitekWeb.Models.Student", b =>
                {
                    b.Property<long>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StudentId"));

                    b.Property<long>("ClassesId")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassesId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("quasitekWeb.Models.Teacher", b =>
                {
                    b.Property<long>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TeacherId"));

                    b.Property<string>("Authorize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pw")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("quasitekWeb.Models.Classes", b =>
                {
                    b.HasOne("quasitekWeb.Models.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("quasitekWeb.Models.RecordLog", b =>
                {
                    b.HasOne("quasitekWeb.Models.PaperType", "AcedemicType")
                        .WithMany("AcademicRecordLogs")
                        .HasForeignKey("AcedemicTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("quasitekWeb.Models.Classes", "Classes")
                        .WithMany()
                        .HasForeignKey("ClassesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quasitekWeb.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quasitekWeb.Models.Mode", "ModeNavigation")
                        .WithMany()
                        .HasForeignKey("ModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quasitekWeb.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quasitekWeb.Models.PaperType", "TechType")
                        .WithMany("TechnicalRecordLogs")
                        .HasForeignKey("TechTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AcedemicType");

                    b.Navigation("Classes");

                    b.Navigation("Course");

                    b.Navigation("ModeNavigation");

                    b.Navigation("Student");

                    b.Navigation("TechType");
                });

            modelBuilder.Entity("quasitekWeb.Models.Student", b =>
                {
                    b.HasOne("quasitekWeb.Models.Classes", "Classes")
                        .WithMany("Students")
                        .HasForeignKey("ClassesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classes");
                });

            modelBuilder.Entity("quasitekWeb.Models.Classes", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("quasitekWeb.Models.Course", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("quasitekWeb.Models.PaperType", b =>
                {
                    b.Navigation("AcademicRecordLogs");

                    b.Navigation("TechnicalRecordLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
